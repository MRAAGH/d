#!/usr/bin/python3

import os
import sys
from time import sleep
import subprocess
#
# time.sleep(0.2)
# call(['xdotool', 'type', msg])
# time.sleep(0.2)
# call(['xdotool', 'key', 'Return'])
# time.sleep(0.05)
# call(['xdotool', 'key', 'Return'])




# while True:
#     subprocess.call(['xdotool', 'search', '--name', 'Legends of Equestria', 'key', '1'])
#     time.sleep(0.1)
#     print("lel")

#
# a = subprocess.run(['xdotool', 'getmouselocation', '--shell'], stdout=subprocess.PIPE)
# lines = a.stdout.decode('utf-8').split('\n')[0:2]
# x = lines[0][2:]
# y = lines[1][2:]
#

steps6 = [
    (640, 0),
    (640, 0),
    (-1280, 520),
    (640, 0),
    (640, 0),
    (-1280, -520),
]
steps12 = [
    (640, 0),
    (640, 0),
    (640, 0),
    (640, 0),
    (640, 0),
    (-3200, 520),
    (640, 0),
    (640, 0),
    (640, 0),
    (640, 0),
    (640, 0),
    (-3200, -520),
]

if sys.argv[1] == '6':
    steps = steps6
elif sys.argv[1] == '12':
    steps = steps12
else:
    print('invalid first arg')
    sys.exit()

timefull = float(sys.argv[2])
timeshort = timefull * 0.15
timelong = timefull * 0.7

while True:
    for step in steps:
        if os.path.isfile('/tmp/HALT_ALL_THE_THINGS'):
            os.remove('/tmp/HALT_ALL_THE_THINGS')
            sys.exit()
        sleep(timeshort)
        # sleep(0.1)
        subprocess.call(['xdotool', 'mousedown', '1'])
        sleep(timelong)
        # sleep(0.5)
        subprocess.call(['xdotool', 'mouseup', '1'])
        sleep(timeshort)
        # sleep(0.1)
        subprocess.call(['xdotool', 'mousemove_relative', '--', str(step[0]), str(step[1])])
    if len(sys.argv) < 4 or sys.argv[3] == '0':
        break




#
# a = subprocess.run(['xdotool', 'search', '--name', 'Legends of Equestria'], stdout=subprocess.PIPE)
# lines = a.stdout.decode('utf-8').split('\n')[0:-1]
#
# # subprocess.call(['xdotool', 'keydown', '1', '--window', lines[0]])
# # time.sleep(3)
# # subprocess.call(['xdotool', 'keyup', '1', '--window', lines[0]])
#
# for line in lines:
#     subprocess.call(['xdotool', 'keydown', 'Enter', '--window', line])
#     time.sleep(1)
#
# time.sleep(3)
# for line in lines:
#     subprocess.call(['xdotool', 'keyup', 'Enter', '--window', line])
#     time.sleep(1)
