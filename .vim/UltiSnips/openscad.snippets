snippet $fn "$fn"
$fn = ${1:50};

endsnippet

snippet tr "translate" i
translate([${1:0},${2:0}])${0:${VISUAL}}
endsnippet

snippet trr "translate" i
translate([${1:0},${2:0},${3:0}])${0:${VISUAL}}
endsnippet

snippet { "brace" i
{
${0:${VISUAL}}
}
endsnippet

snippet rt "rotate" i
rotate(${1:0})${0:${VISUAL}}
endsnippet

snippet rtt "rotate" i
rotate([${1:0},${2:0},${3:0}])${0:${VISUAL}}
endsnippet

snippet li "linear extrude" i
linear_extrude($1, convexity=10){
${0:${VISUAL}}
}
endsnippet

snippet dif "difference" i
difference(){
${0:${VISUAL}}
}
endsnippet

snippet int "intersection" i
intersection(){
${0:${VISUAL}}
}
endsnippet

snippet uni "union" i
union(){
${0:${VISUAL}}
}
endsnippet

snippet round "rounded square" i
rounded_square([${1:1},${2:1}],[${3:0},$3,$3,$3],center=${4:false});
$0
endsnippet

snippet sq "square" i
square([${1:1},${2:1}],center=${3:false});
$0
endsnippet

snippet ci "circle" i
circle(d=${1:1});
$0
endsnippet

snippet cub "cube" i
cube([${1:1},${2:1},${3:1}],center=${4:false});
$0
endsnippet

snippet sph "sphere" i
sphere(d=${1:1});
$0
endsnippet

snippet mi "mirror" i
mirror([${1:0},${2:0}]){
$0
}
endsnippet

snippet mir "mirror" i
mirror([${1:0},${2:0},${3:0}]){
${0:${VISUAL}}
}
endsnippet

snippet use "use"
use <$1.scad>;
$0
endsnippet

snippet poly "polygon" i
polygon([
    [${1:0},${2:0}],
    $0
]);
endsnippet

snippet j "polygon point" b
[${1:0},${2:0}],
$0
endsnippet

# FYI: you can't put a tabstop/trigger in python interpolation output.
# snippet "poly(\d+)?" "polygon" br
# polygon([
# `!p
# n = int(match.group(1)) if match.group(1) is not None else 1
# for i in range(n-1):
#   snip.rv += "    [${"+str(2*i+1)+":0},${"+str(2*i+2)+":0}],\n"
# snip.rv += "    [${"+str(2*n-1)+":0},${"+str(2*n)+":0}],\n" `
# ]);
# $0
# endsnippet
